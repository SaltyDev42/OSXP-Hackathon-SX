---
- name: Install bastion compononent for AWX
  hosts: all
  become: true

  tasks:
  - name: "Install EPEL repo"
    package:
      name: epel-release 
      state: present

  - name: "Install ansible repo"
    package:
      name: centos-release-ansible-29
      state: present

  - name: "Install package"
    package:
      name: "{{ item }}"
      state: present
    loop:
      - git
      - ansible
      - python3-certbot
      - python3-certbot-dns-route53

- name: Prepare bastion for AWX
  hosts: all
  become: false
  tasks:
  - name: "add private SSH key file (lazyman)"
    copy:
      src: awx.key
      dest: .ssh/id_ed25519
      mode: u=r,go=

  - name: "Clone AWX repository"
    git:
      clone: yes
      dest: "awx"
      repo: "https://github.com/ansible/awx"
      force: yes
      version: "17.1.0"

  - name: "Change ansible inventory file to target"
    replace:
      path: "awx/installer/inventory"
      regexp: "{{ item.regexp }}"
      replace: "{{ item.replace }}"
    loop:
      - regexp: "localhost ansible_connection=local"
        replace: "awx.{{ domainlocal }}"
      - regexp: "# admin_password=password"
        replace: "admin_password=verycomplexpassword123!"
      - regexp: "# docker_logger=journald"
        replace: "docker_logger=journald"
      ## those needs to be present in the target host
      - regexp: "#ssl_certificate="
        replace: 'ssl_certificate="/tmp/certbot/config/live/awx.{{ domain }}/fullchain.pem"'
      - regexp: "#ssl_certificate_key="
        replace: 'ssl_certificate_key="/tmp/certbot/config/live/awx.{{ domain }}/privkey.pem"'
      - regexp: "#project_data_dir=/var/lib/awx/projects"
        replace: "project_data_dir=/var/lib/awx/projects"
    
  - name: "Add become=true to install.yml file "
    lineinfile:
      firstmatch: true
      insertafter: "hosts: all"
      line: "  become: true"
      path: "awx/installer/install.yml"
      state: present

  - name: "Generate Certificate certbot"
    ## secret key are too sensitive to be logged remotely
    no_log: true
    shell: >
      AWS_ACCESS_KEY_ID="{{ aws_access_key }}"
      AWS_SECRET_ACCESS_KEY="{{ aws_secret_key }}"
      certbot-3 certonly --config-dir ~/certbot/config --work-dir ~/certbot/work --logs-dir ~/certbot/logs
      --dns-route53 -d awx.{{ domain }} -d awx-task.{{domain}} --agree-tos -m {{ mail }} --no-eff-email -n

  - name: "Copy certificate file to Host AWX"
    shell: "rsync -Lr certbot awx@awx.{{ domainlocal }}:/tmp"
